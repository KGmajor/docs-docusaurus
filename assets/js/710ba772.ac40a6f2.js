"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2439],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=o,g=p["".concat(d,".").concat(m)]||p[m]||u[m]||r;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9811:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(7605),o=(n(9496),n(9613));const r={},i="Introduction to Modeling",l={unversionedId:"composedb/guides/data-modeling/introduction-to-modeling",id:"composedb/guides/data-modeling/introduction-to-modeling",title:"Introduction to Modeling",description:"Learn the basics of creating a new data model.",source:"@site/docs/composedb/guides/data-modeling/introduction-to-modeling.mdx",sourceDirName:"composedb/guides/data-modeling",slug:"/composedb/guides/data-modeling/introduction-to-modeling",permalink:"/docs-docusaurus/docs/composedb/guides/data-modeling/introduction-to-modeling",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"composedb",previous:{title:"Writing Models",permalink:"/docs-docusaurus/docs/composedb/guides/data-modeling/writing-models"},next:{title:"Schemas",permalink:"/docs-docusaurus/docs/composedb/guides/data-modeling/schemas"}},d={},s=[{value:"Setup",id:"setup",level:2},{value:"Metadata",id:"metadata",level:2},{value:"Schema",id:"schema",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Related Guides",id:"related-guides",level:2}],c={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction-to-modeling"},"Introduction to Modeling"),(0,o.kt)("p",null,"Learn the basics of creating a new data model."),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Create a new ",(0,o.kt)("inlineCode",{parentName:"p"},".graphql")," file in your project directory to store your model(s). "),(0,o.kt)("p",null,"For example, let\u2019s create a file called ",(0,o.kt)("inlineCode",{parentName:"p"},"my-schema.graphql"),". Inside, we\u2019re going to create a model to store a very simple user profile:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},'type SimpleProfile @createModel(accountRelation: SINGLE, description: "Very basic profile") {\n  displayName: String! @string(minLength: 3, maxLength: 50)\n}\n')),(0,o.kt)("h2",{id:"metadata"},"Metadata"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Let\u2019s look into the metadata properties of your new model:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},'type SimpleProfile @createModel(accountRelation: SINGLE, description: "Very basic profile")\n')),(0,o.kt)("p",null,"Where:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"type")," defines the name for your model, in our case ",(0,o.kt)("inlineCode",{parentName:"li"},"SimpleProfile")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"@createModel")," is a directive that specifies we are creating a new model"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"accountRelation")," defines the allowable number of instances per account, where ",(0,o.kt)("inlineCode",{parentName:"li"},"SINGLE")," limits one instance per account, and ",(0,o.kt)("inlineCode",{parentName:"li"},"LIST")," allows unlimited instances per account"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"description")," is a string that describes the model")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Model names and descriptions are used in the ",(0,o.kt)("a",{parentName:"p",href:"/docs-docusaurus/docs/composedb/guides/data-modeling/model-catalog"},"Model Catalog"),". Aim for short and descriptive to improve discovery and reuse.")),(0,o.kt)("h2",{id:"schema"},"Schema"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Model schemas are written using the GraphQL Schema Definition Language (SDL). Let\u2019s look at the schema of our new model. It\u2019s a shape that only defines a single field (key) and scalar (value):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  displayName: String! @string(minLength: 3, maxLength: 50)\n}\n")),(0,o.kt)("p",null,"Where:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"displayName")," is a field"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"String!")," is a scalar that defines ",(0,o.kt)("inlineCode",{parentName:"li"},"displayName")," is a required (",(0,o.kt)("inlineCode",{parentName:"li"},"!"),") string"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"@string")," is a directive that sets validation rules for the scalar, in our case min and max length")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This is a very basic schema. Your schemas can contain more than one field and include various relations. See ",(0,o.kt)("a",{parentName:"p",href:"/docs-docusaurus/docs/composedb/guides/data-modeling/schemas"},"Schemas")," next.")),(0,o.kt)("h2",{id:"next-steps"},"Next Steps"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"To use your new model in your application, you will need to create a ",(0,o.kt)("a",{parentName:"p",href:"/docs-docusaurus/docs/composedb/guides/data-modeling/composites"},(0,o.kt)("strong",{parentName:"a"},"Composite \u2192"))),(0,o.kt)("h2",{id:"related-guides"},"Related Guides"),(0,o.kt)("hr",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Dive deeper into GraphQL ",(0,o.kt)("a",{parentName:"li",href:"/docs-docusaurus/docs/composedb/guides/data-modeling/schemas"},(0,o.kt)("strong",{parentName:"a"},"Schemas"))),(0,o.kt)("li",{parentName:"ul"},"Learn how to add ",(0,o.kt)("a",{parentName:"li",href:"/docs-docusaurus/docs/composedb/guides/data-modeling/relations"},(0,o.kt)("strong",{parentName:"a"},"Relations"))," to your models")))}u.isMDXComponent=!0}}]);