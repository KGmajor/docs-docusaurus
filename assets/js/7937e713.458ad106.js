"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8547],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(g,c(c({ref:t},u),{},{components:n})):r.createElement(g,c({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8346:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(7605),o=(n(9496),n(9613));const a={},c="Launch a local Ceramic node",i={unversionedId:"protocol/js-ceramic/guides/ceramic-nodes/running-locally",id:"protocol/js-ceramic/guides/ceramic-nodes/running-locally",title:"Launch a local Ceramic node",description:"---",source:"@site/docs/protocol/js-ceramic/guides/ceramic-nodes/running-locally.md",sourceDirName:"protocol/js-ceramic/guides/ceramic-nodes",slug:"/protocol/js-ceramic/guides/ceramic-nodes/running-locally",permalink:"/docs-docusaurus/docs/protocol/js-ceramic/guides/ceramic-nodes/running-locally",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"protocol",previous:{title:"Ceramic Development Guides",permalink:"/docs-docusaurus/docs/protocol/js-ceramic/guides/guides-index"},next:{title:"Running Ceramic in production",permalink:"/docs-docusaurus/docs/protocol/js-ceramic/guides/ceramic-nodes/running-cloud"}},l={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation and usage",id:"installation-and-usage",level:2},{value:"Install the Ceramic CLI",id:"install-the-ceramic-cli",level:3},{value:"Launch the Ceramic node",id:"launch-the-ceramic-node",level:3},{value:"<strong>Configure your network</strong>",id:"configure-your-network",level:3},{value:"<strong>Configure a node URL</strong>",id:"configure-a-node-url",level:3}],u={toc:s},d="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"launch-a-local-ceramic-node"},"Launch a local Ceramic node"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"The Ceramic command line interface provides an easy way to start a JS Ceramic node in a local Node.js environment. This is a great way to get started developing with Ceramic before moving to a cloud-hosted node for production use cases."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Installing the CLI requires a console, ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/en/"},"Node.js"),'{:target="',"_",'blank"} v16, and ',(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/get-npm"},"npm"),'{:target="',"_",'blank"} v6. Make sure to have these installed on your machine.'),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},'While npm v7 is not officially supported, you may still be able to get it to work. You will need to install the `node-pre-gyp` package globally. This is required until `node-webrtc` which IPFS depends on [is upgraded](https://github.com/node-webrtc/node-webrtc/pull/694){:target="_blank"}.\n\n\nnpm install -g node-pre-gyp\n'))),(0,o.kt)("h2",{id:"installation-and-usage"},"Installation and usage"),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"install-the-ceramic-cli"},"Install the Ceramic CLI"),(0,o.kt)("p",null,"Open your console and install the CLI using npm:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @ceramicnetwork/cli\n")),(0,o.kt)("h3",{id:"launch-the-ceramic-node"},"Launch the Ceramic node"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"ceramic daemon")," command to start a local JS Ceramic node connected to the ",(0,o.kt)("a",{parentName:"p",href:"/docs-docusaurus/docs/protocol/js-ceramic/networking/networks#clay-testnet"},"Clay Testnet")," at ",(0,o.kt)("inlineCode",{parentName:"p"},"https://localhost:7007"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ceramic daemon\n")),(0,o.kt)("h3",{id:"configure-your-network"},(0,o.kt)("strong",{parentName:"h3"},"Configure your network")),(0,o.kt)("p",null,"(Optional) By default, the JS CLI starts a node on the ",(0,o.kt)("a",{parentName:"p",href:"/docs-docusaurus/docs/protocol/js-ceramic/networking/networks#clay-testnet"},"Clay Testnet"),". If you would like to use a different network, you can specify this using the ",(0,o.kt)("inlineCode",{parentName:"p"},"--network")," option. View ",(0,o.kt)("a",{parentName:"p",href:"/docs-docusaurus/docs/protocol/js-ceramic/networking/networks"},"available networks"),". Note, the CLI can not be used with ",(0,o.kt)("a",{parentName:"p",href:"/docs-docusaurus/docs/protocol/js-ceramic/networking/networks#mainnet"},"Mainnet"),"."),(0,o.kt)("h3",{id:"configure-a-node-url"},(0,o.kt)("strong",{parentName:"h3"},"Configure a node URL")),(0,o.kt)("p",null,"(Optional) It is possible to use the CLI with a remote Ceramic node over HTTP, instead of a local node. To do this, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"config set")," command to set the ",(0,o.kt)("inlineCode",{parentName:"p"},"ceramicHost")," variable to the URL of the node you wish to use."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ceramic config set ceramicHost 'https://yourceramicnode.com'\n")))}p.isMDXComponent=!0}}]);